PT-BR
20/03/2024
Mais uma vez, como o nome sugere, irei adicionar mais uma
validação de dados criando um novo teste para que seja
impossível adicionar um usuário sem senha.

Irei utilizar uma terceira maneira de trabalhar com
assincronicidade para que fique claro algumas das formas
de como utilizar esse recurso valioso.

No teste que fora criado, utilizei o recurso "done()".
Com esse recurso eu posso fazer milhares de coisas dentro
do meu teste, trabalhar de diversas formas, que ele só de
fato finalizar, quando eu invocar o "done()". Assim eu 
asseguro que as informações que são voltadas das requisições
sejam as que eu realmente estou esperando nos testes.

Vale ressaltar a diferença de conclusão das 3 formas que
utilizei para trabalhar com os testes:

1ª - request.then: imprescindível o uso do "return" se não
o teste não irá parar.
2ª - async/await: devo declarar o método como "async" e a
requisição deve ser "await".
3ª - done(): imprescindível a chamada do método "done()", se
não o teste irá falhar.

Note que o resultado das 3 formas serão os mesmos, cabe ao
desenvolvedor utilizar a que mais lhe agrada ou que for o
padrão da empresa/projeto que está trabalhando.


ENGLISH
03/20/2024
Once again, as the name suggests, I will add another data
validation by creating a new test to make it impossible to add
a user without a password.

I will use a third way of working with asynchronicity to make
it clear some of the ways to utilize this valuable resource.

In the test that was created, I used the "done()" feature. With
this feature, I can do thousands of things within my test, work
in various ways, and it will only actually finish when I invoke
"done()". This ensures that the information returned from the
requests is what I am truly expecting in the tests.

It is worth noting the difference in conclusion among the 3 ways
I used to work with the tests:

1st - request.then: It is essential to use "return", otherwise
the test will not stop.
2nd - async/await: I must declare the method as "async" and the
request must be "await".
3rd - done(): It is essential to call the "done()" method, otherwise
the test will fail.

Note that the result of the 3 ways will be the same, and it's up to
the developer to use whichever they prefer or which is the standard
of the company/project they are working on.